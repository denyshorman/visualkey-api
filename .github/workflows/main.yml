name: Main Build-Deploy Pipeline

on:
  push:
    branches:
      - release

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    outputs:
      IMAGE_VERSION: ${{ steps.image-tag.outputs.IMAGE_VERSION }}
      IMAGE_NAME: ${{ steps.image-tag.outputs.IMAGE_NAME }}
      IMAGE_TAG: ${{ steps.image-tag.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - run: git lfs checkout
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 20
          cache: gradle
      - uses: gradle/gradle-build-action@v2
      - run: ./gradlew buildFatJar --no-daemon
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: image-tag
        run: |
          IMAGE_VERSION=${GITHUB_REF_NAME}-${GITHUB_SHA}
          IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}
          IMAGE_TAG=$IMAGE_NAME:$IMAGE_VERSION
          echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ steps.image-tag.outputs.IMAGE_TAG }}
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    environment:
      name: prod
      url: https://api.visualkey.link
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@v1.4
      - run: |
          IMAGE_TAG=${{ needs.build.outputs.IMAGE_TAG }}
          flyctl deploy -i $IMAGE_TAG --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
